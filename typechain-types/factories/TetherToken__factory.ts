/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import {Provider, TransactionRequest} from "@ethersproject/providers";
import type {TetherToken, TetherTokenInterface} from "../TetherToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_initialSupply",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_decimals",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "AddedBlackList",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "Deprecate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_blackListedUser",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_balance",
        type: "uint256",
      },
    ],
    name: "DestroyedBlackFunds",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Issue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "feeBasisPoints",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxFee",
        type: "uint256",
      },
    ],
    name: "Params",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Pause",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Redeem",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "RemovedBlackList",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Unpause",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_UINT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_evilUser",
        type: "address",
      },
    ],
    name: "addBlackList",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "remaining",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "basisPointsRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_upgradedAddress",
        type: "address",
      },
    ],
    name: "deprecate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deprecated",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_blackListedUser",
        type: "address",
      },
    ],
    name: "destroyBlackFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_maker",
        type: "address",
      },
    ],
    name: "getBlackListStatus",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isBlackListed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "issue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "maximumFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "redeem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_clearedUser",
        type: "address",
      },
    ],
    name: "removeBlackList",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newBasisPoints",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newMaxFee",
        type: "uint256",
      },
    ],
    name: "setParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "upgradedAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000805460ff60a01b1916815560038190556004556000196006553480156200002c57600080fd5b5060405162001995380380620019958339810160408190526200004f916200021c565b600080546001600160a01b03191633179055600184905582516200007b906008906020860190620000c3565b50815162000091906009906020850190620000c3565b50600a555050600080546001600160a01b0316815260026020526040902055600b805460ff60a01b19169055620002e8565b828054620000d19062000295565b90600052602060002090601f016020900481019282620000f5576000855562000140565b82601f106200011057805160ff191683800117855562000140565b8280016001018555821562000140579182015b828111156200014057825182559160200191906001019062000123565b506200014e92915062000152565b5090565b5b808211156200014e576000815560010162000153565b600082601f8301126200017a578081fd5b81516001600160401b0380821115620001975762000197620002d2565b604051601f8301601f19908116603f01168101908282118183101715620001c257620001c2620002d2565b81604052838152602092508683858801011115620001de578485fd5b8491505b83821015620002015785820183015181830184015290820190620001e2565b838211156200021257848385830101525b9695505050505050565b6000806000806080858703121562000232578384fd5b845160208601519094506001600160401b038082111562000251578485fd5b6200025f8883890162000169565b9450604087015191508082111562000275578384fd5b50620002848782880162000169565b606096909601519497939650505050565b600181811c90821680620002aa57607f821691505b60208210811415620002cc57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61169d80620002f86000396000f3fe608060405234801561001057600080fd5b50600436106101805760003560e01c806306fdde03146101855780630753c30c146101a3578063095ea7b3146101b85780630e136b19146101cb5780630ecb93c0146101ef57806318160ddd1461020257806323b872dd1461021857806326976e3f1461022b57806327e235e31461024b578063313ce5671461026b57806335390714146102745780633eaaf86b1461027d5780633f4ba83a1461028657806359bf1abe1461028e5780635c658165146102a15780635c975abb146102cc57806370a08231146102e05780638456cb59146102f3578063893d20e8146102fb5780638da5cb5b1461030c57806395d89b411461031f578063a9059cbb14610327578063c0324c771461033a578063cc872b661461034d578063db006a7514610360578063dd62ed3e14610373578063dd644f7214610386578063e47d60601461038f578063e4997dc5146103b2578063e5b5019a146103c5578063f2fde38b146103ce578063f3bdc228146103e1575b600080fd5b61018d6103f4565b60405161019a9190611421565b60405180910390f35b6101b66101b13660046112e8565b610482565b005b6101b66101c636600461136f565b6104f7565b600b546101df90600160a01b900460ff1681565b604051901515815260200161019a565b6101b66101fd3660046112e8565b61059c565b61020a610606565b60405190815260200161019a565b6101b6610226366004611334565b6106b2565b600b5461023e906001600160a01b031681565b60405161019a91906113e9565b61020a6102593660046112e8565b60026020526000908152604090205481565b61020a600a5481565b61020a60045481565b61020a60015481565b6101b6610753565b6101df61029c3660046112e8565b6107b6565b61020a6102af366004611302565b600560209081526000928352604080842090915290825290205481565b6000546101df90600160a01b900460ff1681565b61020a6102ee3660046112e8565b6107d8565b6101b6610894565b6000546001600160a01b031661023e565b60005461023e906001600160a01b031681565b61018d6108fe565b6101b661033536600461136f565b61090b565b6101b66103483660046113c8565b6109ca565b6101b661035b366004611398565b610a61565b6101b661036e366004611398565b610b32565b61020a610381366004611302565b610bf1565b61020a60035481565b6101df61039d3660046112e8565b60076020526000908152604090205460ff1681565b6101b66103c03660046112e8565b610cc5565b61020a60065481565b6101b66103dc3660046112e8565b610d2c565b6101b66103ef3660046112e8565b610d71565b60088054610401906115f6565b80601f016020809104026020016040519081016040528092919081815260200182805461042d906115f6565b801561047a5780601f1061044f5761010080835404028352916020019161047a565b820191906000526020600020905b81548152906001019060200180831161045d57829003601f168201915b505050505081565b6000546001600160a01b0316331461049957600080fd5b600b80546001600160a01b0383166001600160a81b031990911617600160a01b1790556040517fcc358699805e9a8b7f77b522628c7cb9abd07d9efb86b6fb616af1609036a99e906104ec9083906113e9565b60405180910390a150565b6040610504816004611474565b36101561051057600080fd5b600b54600160a01b900460ff161561058d57600b5460405163aee92d3360e01b81526001600160a01b039091169063aee92d3390610556903390879087906004016113fd565b600060405180830381600087803b15801561057057600080fd5b505af1158015610584573d6000803e3d6000fd5b50505050610597565b6105978383610e2e565b505050565b6000546001600160a01b031633146105b357600080fd5b6001600160a01b03811660009081526007602052604090819020805460ff19166001179055517f42e160154868087d6bfdc0ca23d96a1c1cfa32f1b72ba9ba27b69b98a0d819dc906104ec9083906113e9565b600b54600090600160a01b900460ff16156106aa57600b60009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561066b57600080fd5b505af115801561067f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a391906113b0565b90506106af565b506001545b90565b600054600160a01b900460ff16156106c957600080fd5b6001600160a01b03831660009081526007602052604090205460ff16156106ef57600080fd5b600b54600160a01b900460ff161561074857600b54604051638b477adb60e01b81523360048201526001600160a01b03858116602483015284811660448301526064820184905290911690638b477adb90608401610556565b610597838383610ee2565b6000546001600160a01b0316331461076a57600080fd5b600054600160a01b900460ff1661078057600080fd5b6000805460ff60a01b191681556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b339190a1565b6001600160a01b03811660009081526007602052604090205460ff165b919050565b600b54600090600160a01b900460ff161561087657600b546040516370a0823160e01b81526001600160a01b03909116906370a082319061081d9085906004016113e9565b602060405180830381600087803b15801561083757600080fd5b505af115801561084b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086f91906113b0565b90506107d3565b6001600160a01b03821660009081526002602052604090205461086f565b6000546001600160a01b031633146108ab57600080fd5b600054600160a01b900460ff16156108c257600080fd5b6000805460ff60a01b1916600160a01b1781556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff6259190a1565b60098054610401906115f6565b600054600160a01b900460ff161561092257600080fd5b3360009081526007602052604090205460ff161561093f57600080fd5b600b54600160a01b900460ff16156109bc57600b5460405163370c4c0560e11b81526001600160a01b0390911690636e18980a90610985903390869086906004016113fd565b600060405180830381600087803b15801561099f57600080fd5b505af11580156109b3573d6000803e3d6000fd5b505050506109c6565b6109c682826110bb565b5050565b6000546001600160a01b031633146109e157600080fd5b601482106109ee57600080fd5b603281106109fb57600080fd5b6003829055600a8054610a0d916114f2565b610a1790826115c0565b60048190556003546040517fb044a1e409eac5c48e5af22d4af52670dd1a99059537a78b31b48c6500a6354e92610a55928252602082015260400190565b60405180910390a15050565b6000546001600160a01b03163314610a7857600080fd5b600154610a858282611474565b11610a8f57600080fd5b600080546001600160a01b0316815260026020526040902054610ab28282611474565b11610abc57600080fd5b600080546001600160a01b031681526002602052604081208054839290610ae4908490611474565b925050819055508060016000828254610afd9190611474565b90915550506040518181527fcb8241adb0c3fdb35b70c24ce35c5eb0c17af7431c99f827d44a445ca624176a906020016104ec565b6000546001600160a01b03163314610b4957600080fd5b806001541015610b5857600080fd5b600080546001600160a01b0316815260026020526040902054811115610b7d57600080fd5b8060016000828254610b8f91906115df565b9091555050600080546001600160a01b031681526002602052604081208054839290610bbc9084906115df565b90915550506040518181527f702d5967f45f6513a38ffc42d6ba9bf230bd40e8f53b16363c7eb4fd2deb9a44906020016104ec565b600b54600090600160a01b900460ff1615610c9457600b54604051636eb1769f60e11b81526001600160a01b03858116600483015284811660248301529091169063dd62ed3e90604401602060405180830381600087803b158015610c5557600080fd5b505af1158015610c69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8d91906113b0565b9050610cbf565b6001600160a01b03808416600090815260056020908152604080832093861683529290522054610c8d565b92915050565b6000546001600160a01b03163314610cdc57600080fd5b6001600160a01b03811660009081526007602052604090819020805460ff19169055517fd7e9ec6e6ecd65492dce6bf513cd6867560d49544421d0783ddf06e76c24470c906104ec9083906113e9565b6000546001600160a01b03163314610d4357600080fd5b6001600160a01b03811615610d6e57600080546001600160a01b0319166001600160a01b0383161790555b50565b6000546001600160a01b03163314610d8857600080fd5b6001600160a01b03811660009081526007602052604090205460ff16610dad57600080fd5b6000610db8826107d8565b6001600160a01b0383166000908152600260205260408120819055600180549293508392909190610dea9084906115df565b9091555050604080516001600160a01b0384168152602081018390527f61e6e66b0d6339b2980aecc6ccc0039736791f0ccde9ed512e789a7fbdd698c69101610a55565b6040610e3b816004611474565b361015610e4757600080fd5b8115801590610e7857503360009081526005602090815260408083206001600160a01b038716845290915290205415155b15610e8257600080fd5b3360008181526005602090815260408083206001600160a01b03881680855290835292819020869055518581529192917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6060610eef816004611474565b361015610efb57600080fd5b6001600160a01b038416600090815260056020908152604080832033845290915281205460035490919061271090610f3390866115c0565b610f3d919061148c565b9050600454811115610f4e57506004545b600654821015610f8757610f6284836115df565b6001600160a01b03871660009081526005602090815260408083203384529091529020555b6000610f9382866115df565b6001600160a01b038816600090815260026020526040902054909150610fba9086906115df565b6001600160a01b038089166000908152600260205260408082209390935590881681522054610fea908290611474565b6001600160a01b038716600090815260026020526040902055811561107757600080546001600160a01b031681526002602052604090205461102d908390611474565b600080546001600160a01b039081168252600260209081526040808420949094559154925185815292811692908a1691600080516020611648833981519152910160405180910390a35b856001600160a01b0316876001600160a01b0316600080516020611648833981519152836040516110aa91815260200190565b60405180910390a350505050505050565b60406110c8816004611474565b3610156110d457600080fd5b60006110f76127106110f16003548661121b90919063ffffffff16565b90611265565b905060045481111561110857506004545b6000611114848361127a565b33600090815260026020526040902054909150611131908561127a565b33600090815260026020526040808220929092556001600160a01b0387168152205461115d90826112a4565b6001600160a01b03861660009081526002602052604090205581156111e657600080546001600160a01b031681526002602052604090205461119f90836112a4565b600080546001600160a01b03908116825260026020908152604080842094909455915492518581529216913391600080516020611648833981519152910160405180910390a35b6040518181526001600160a01b0386169033906000805160206116488339815191529060200160405180910390a35050505050565b60008261122a57506000610cbf565b600061123683856115c0565b905082611243858361148c565b1461125e57634e487b7160e01b600052600160045260246000fd5b9392505050565b600080611272838561148c565b949350505050565b60008282111561129a57634e487b7160e01b600052600160045260246000fd5b61125e82846115df565b6000806112b18385611474565b90508381101561125e57634e487b7160e01b600052600160045260246000fd5b80356001600160a01b03811681146107d357600080fd5b6000602082840312156112f9578081fd5b61125e826112d1565b60008060408385031215611314578081fd5b61131d836112d1565b915061132b602084016112d1565b90509250929050565b600080600060608486031215611348578081fd5b611351846112d1565b925061135f602085016112d1565b9150604084013590509250925092565b60008060408385031215611381578182fd5b61138a836112d1565b946020939093013593505050565b6000602082840312156113a9578081fd5b5035919050565b6000602082840312156113c1578081fd5b5051919050565b600080604083850312156113da578182fd5b50508035926020909101359150565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6000602080835283518082850152825b8181101561144d57858101830151858201604001528201611431565b8181111561145e5783604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561148757611487611631565b500190565b6000826114a757634e487b7160e01b81526012600452602481fd5b500490565b80825b60018086116114be57506114e9565b8187048211156114d0576114d0611631565b808616156114dd57918102915b9490941c9380026114af565b94509492505050565b600061125e600019848460008261150b5750600161125e565b816115185750600061125e565b816001811461152e576002811461153857611565565b600191505061125e565b60ff84111561154957611549611631565b6001841b91508482111561155f5761155f611631565b5061125e565b5060208310610133831016604e8410600b8410161715611598575081810a8381111561159357611593611631565b61125e565b6115a584848460016114ac565b8086048211156115b7576115b7611631565b02949350505050565b60008160001904831182151516156115da576115da611631565b500290565b6000828210156115f1576115f1611631565b500390565b600181811c9082168061160a57607f821691505b6020821081141561162b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220ffa9c5ee262cee3f294981a87096a5b6f3e6d2eddcf086fd35783165ac9cd0fa64736f6c63430008030033";

type TetherTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TetherTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TetherToken__factory extends ContractFactory {
  constructor(...args: TetherTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "TetherToken";
  }

  deploy(
    _initialSupply: BigNumberish,
    _name: string,
    _symbol: string,
    _decimals: BigNumberish,
    overrides?: Overrides & {from?: string | Promise<string>}
  ): Promise<TetherToken> {
    return super.deploy(
      _initialSupply,
      _name,
      _symbol,
      _decimals,
      overrides || {}
    ) as Promise<TetherToken>;
  }
  getDeployTransaction(
    _initialSupply: BigNumberish,
    _name: string,
    _symbol: string,
    _decimals: BigNumberish,
    overrides?: Overrides & {from?: string | Promise<string>}
  ): TransactionRequest {
    return super.getDeployTransaction(
      _initialSupply,
      _name,
      _symbol,
      _decimals,
      overrides || {}
    );
  }
  attach(address: string): TetherToken {
    return super.attach(address) as TetherToken;
  }
  connect(signer: Signer): TetherToken__factory {
    return super.connect(signer) as TetherToken__factory;
  }
  static readonly contractName: "TetherToken";
  public readonly contractName: "TetherToken";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TetherTokenInterface {
    return new utils.Interface(_abi) as TetherTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TetherToken {
    return new Contract(address, _abi, signerOrProvider) as TetherToken;
  }
}
