/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../common";

export declare namespace MarsBaseCommon {
  export type MBOfferStruct = {
    active: PromiseOrValue<boolean>;
    minimumMet: PromiseOrValue<boolean>;
    offerType: PromiseOrValue<BigNumberish>;
    offerId: PromiseOrValue<BigNumberish>;
    amountAlice: PromiseOrValue<BigNumberish>;
    feeAlice: PromiseOrValue<BigNumberish>;
    feeBob: PromiseOrValue<BigNumberish>;
    smallestChunkSize: PromiseOrValue<BigNumberish>;
    minimumSize: PromiseOrValue<BigNumberish>;
    deadline: PromiseOrValue<BigNumberish>;
    amountRemaining: PromiseOrValue<BigNumberish>;
    offerer: PromiseOrValue<string>;
    payoutAddress: PromiseOrValue<string>;
    tokenAlice: PromiseOrValue<string>;
    capabilities: [
      PromiseOrValue<boolean>,
      PromiseOrValue<boolean>,
      PromiseOrValue<boolean>
    ];
    amountBob: PromiseOrValue<BigNumberish>[];
    minimumOrderAmountsAlice: PromiseOrValue<BigNumberish>[];
    minimumOrderAmountsBob: PromiseOrValue<BigNumberish>[];
    minimumOrderAddresses: PromiseOrValue<string>[];
    minimumOrderTokens: PromiseOrValue<string>[];
    tokenBob: PromiseOrValue<string>[];
  };

  export type MBOfferStructOutput = [
    boolean,
    boolean,
    number,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    string,
    string,
    string,
    [boolean, boolean, boolean],
    BigNumber[],
    BigNumber[],
    BigNumber[],
    string[],
    string[],
    string[]
  ] & {
    active: boolean;
    minimumMet: boolean;
    offerType: number;
    offerId: BigNumber;
    amountAlice: BigNumber;
    feeAlice: BigNumber;
    feeBob: BigNumber;
    smallestChunkSize: BigNumber;
    minimumSize: BigNumber;
    deadline: BigNumber;
    amountRemaining: BigNumber;
    offerer: string;
    payoutAddress: string;
    tokenAlice: string;
    capabilities: [boolean, boolean, boolean];
    amountBob: BigNumber[];
    minimumOrderAmountsAlice: BigNumber[];
    minimumOrderAmountsBob: BigNumber[];
    minimumOrderAddresses: string[];
    minimumOrderTokens: string[];
    tokenBob: string[];
  };

  export type OfferParamsStruct = {
    cancelEnabled: PromiseOrValue<boolean>;
    modifyEnabled: PromiseOrValue<boolean>;
    holdTokens: PromiseOrValue<boolean>;
    feeAlice: PromiseOrValue<BigNumberish>;
    feeBob: PromiseOrValue<BigNumberish>;
    smallestChunkSize: PromiseOrValue<BigNumberish>;
    deadline: PromiseOrValue<BigNumberish>;
    minimumSize: PromiseOrValue<BigNumberish>;
  };

  export type OfferParamsStructOutput = [
    boolean,
    boolean,
    boolean,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber
  ] & {
    cancelEnabled: boolean;
    modifyEnabled: boolean;
    holdTokens: boolean;
    feeAlice: BigNumber;
    feeBob: BigNumber;
    smallestChunkSize: BigNumber;
    deadline: BigNumber;
    minimumSize: BigNumber;
  };
}

export interface MarsBaseInterface extends utils.Interface {
  functions: {
    "changeOfferParams((bool,bool,uint8,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address,address,address,bool[3],uint256[],uint256[],uint256[],address[],address[],address[]),address[],uint256[],(bool,bool,bool,uint256,uint256,uint256,uint256,uint256))": FunctionFragment;
    "contractType(uint8)": FunctionFragment;
    "getOfferType(uint256,(bool,bool,bool,uint256,uint256,uint256,uint256,uint256))": FunctionFragment;
    "initOffer(uint256,address,address[],uint256,uint256[],(bool,bool,bool,uint256,uint256,uint256,uint256,uint256))": FunctionFragment;
    "price(uint256,uint256,uint256)": FunctionFragment;
    "setOfferProperties((bool,bool,uint8,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address,address,address,bool[3],uint256[],uint256[],uint256[],address[],address[],address[]),(bool,bool,bool,uint256,uint256,uint256,uint256,uint256))": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "changeOfferParams"
      | "changeOfferParams((bool,bool,uint8,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address,address,address,bool[3],uint256[],uint256[],uint256[],address[],address[],address[]),address[],uint256[],(bool,bool,bool,uint256,uint256,uint256,uint256,uint256))"
      | "contractType"
      | "contractType(uint8)"
      | "getOfferType"
      | "getOfferType(uint256,(bool,bool,bool,uint256,uint256,uint256,uint256,uint256))"
      | "initOffer"
      | "initOffer(uint256,address,address[],uint256,uint256[],(bool,bool,bool,uint256,uint256,uint256,uint256,uint256))"
      | "price"
      | "price(uint256,uint256,uint256)"
      | "setOfferProperties"
      | "setOfferProperties((bool,bool,uint8,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address,address,address,bool[3],uint256[],uint256[],uint256[],address[],address[],address[]),(bool,bool,bool,uint256,uint256,uint256,uint256,uint256))"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "changeOfferParams",
    values: [
      MarsBaseCommon.MBOfferStruct,
      PromiseOrValue<string>[],
      PromiseOrValue<BigNumberish>[],
      MarsBaseCommon.OfferParamsStruct
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "changeOfferParams((bool,bool,uint8,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address,address,address,bool[3],uint256[],uint256[],uint256[],address[],address[],address[]),address[],uint256[],(bool,bool,bool,uint256,uint256,uint256,uint256,uint256))",
    values: [
      MarsBaseCommon.MBOfferStruct,
      PromiseOrValue<string>[],
      PromiseOrValue<BigNumberish>[],
      MarsBaseCommon.OfferParamsStruct
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "contractType",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "contractType(uint8)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getOfferType",
    values: [PromiseOrValue<BigNumberish>, MarsBaseCommon.OfferParamsStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "getOfferType(uint256,(bool,bool,bool,uint256,uint256,uint256,uint256,uint256))",
    values: [PromiseOrValue<BigNumberish>, MarsBaseCommon.OfferParamsStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "initOffer",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<string>[],
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>[],
      MarsBaseCommon.OfferParamsStruct
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "initOffer(uint256,address,address[],uint256,uint256[],(bool,bool,bool,uint256,uint256,uint256,uint256,uint256))",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<string>[],
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>[],
      MarsBaseCommon.OfferParamsStruct
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "price",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "price(uint256,uint256,uint256)",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "setOfferProperties",
    values: [MarsBaseCommon.MBOfferStruct, MarsBaseCommon.OfferParamsStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "setOfferProperties((bool,bool,uint8,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address,address,address,bool[3],uint256[],uint256[],uint256[],address[],address[],address[]),(bool,bool,bool,uint256,uint256,uint256,uint256,uint256))",
    values: [MarsBaseCommon.MBOfferStruct, MarsBaseCommon.OfferParamsStruct]
  ): string;

  decodeFunctionResult(
    functionFragment: "changeOfferParams",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "changeOfferParams((bool,bool,uint8,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address,address,address,bool[3],uint256[],uint256[],uint256[],address[],address[],address[]),address[],uint256[],(bool,bool,bool,uint256,uint256,uint256,uint256,uint256))",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "contractType",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "contractType(uint8)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getOfferType",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getOfferType(uint256,(bool,bool,bool,uint256,uint256,uint256,uint256,uint256))",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "initOffer", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "initOffer(uint256,address,address[],uint256,uint256[],(bool,bool,bool,uint256,uint256,uint256,uint256,uint256))",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "price", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "price(uint256,uint256,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setOfferProperties",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setOfferProperties((bool,bool,uint8,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address,address,address,bool[3],uint256[],uint256[],uint256[],address[],address[],address[]),(bool,bool,bool,uint256,uint256,uint256,uint256,uint256))",
    data: BytesLike
  ): Result;

  events: {};
}

export interface MarsBase extends BaseContract {
  contractName: "MarsBase";

  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: MarsBaseInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    changeOfferParams(
      offer: MarsBaseCommon.MBOfferStruct,
      tokenBob: PromiseOrValue<string>[],
      amountBob: PromiseOrValue<BigNumberish>[],
      offerParameters: MarsBaseCommon.OfferParamsStruct,
      overrides?: CallOverrides
    ): Promise<[MarsBaseCommon.MBOfferStructOutput]>;

    "changeOfferParams((bool,bool,uint8,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address,address,address,bool[3],uint256[],uint256[],uint256[],address[],address[],address[]),address[],uint256[],(bool,bool,bool,uint256,uint256,uint256,uint256,uint256))"(
      offer: MarsBaseCommon.MBOfferStruct,
      tokenBob: PromiseOrValue<string>[],
      amountBob: PromiseOrValue<BigNumberish>[],
      offerParameters: MarsBaseCommon.OfferParamsStruct,
      overrides?: CallOverrides
    ): Promise<[MarsBaseCommon.MBOfferStructOutput]>;

    contractType(
      offerType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[number]>;

    "contractType(uint8)"(
      offerType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[number]>;

    getOfferType(
      amountAlice: PromiseOrValue<BigNumberish>,
      offerParameters: MarsBaseCommon.OfferParamsStruct,
      overrides?: CallOverrides
    ): Promise<[number]>;

    "getOfferType(uint256,(bool,bool,bool,uint256,uint256,uint256,uint256,uint256))"(
      amountAlice: PromiseOrValue<BigNumberish>,
      offerParameters: MarsBaseCommon.OfferParamsStruct,
      overrides?: CallOverrides
    ): Promise<[number]>;

    initOffer(
      nextOfferId: PromiseOrValue<BigNumberish>,
      tokenAlice: PromiseOrValue<string>,
      tokenBob: PromiseOrValue<string>[],
      amountAlice: PromiseOrValue<BigNumberish>,
      amountBob: PromiseOrValue<BigNumberish>[],
      offerParameters: MarsBaseCommon.OfferParamsStruct,
      overrides?: CallOverrides
    ): Promise<[MarsBaseCommon.MBOfferStructOutput]>;

    "initOffer(uint256,address,address[],uint256,uint256[],(bool,bool,bool,uint256,uint256,uint256,uint256,uint256))"(
      nextOfferId: PromiseOrValue<BigNumberish>,
      tokenAlice: PromiseOrValue<string>,
      tokenBob: PromiseOrValue<string>[],
      amountAlice: PromiseOrValue<BigNumberish>,
      amountBob: PromiseOrValue<BigNumberish>[],
      offerParameters: MarsBaseCommon.OfferParamsStruct,
      overrides?: CallOverrides
    ): Promise<[MarsBaseCommon.MBOfferStructOutput]>;

    price(
      amountAlice: PromiseOrValue<BigNumberish>,
      offerAmountAlice: PromiseOrValue<BigNumberish>,
      offerAmountBob: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "price(uint256,uint256,uint256)"(
      amountAlice: PromiseOrValue<BigNumberish>,
      offerAmountAlice: PromiseOrValue<BigNumberish>,
      offerAmountBob: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    setOfferProperties(
      offer: MarsBaseCommon.MBOfferStruct,
      offerParams: MarsBaseCommon.OfferParamsStruct,
      overrides?: CallOverrides
    ): Promise<[MarsBaseCommon.MBOfferStructOutput]>;

    "setOfferProperties((bool,bool,uint8,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address,address,address,bool[3],uint256[],uint256[],uint256[],address[],address[],address[]),(bool,bool,bool,uint256,uint256,uint256,uint256,uint256))"(
      offer: MarsBaseCommon.MBOfferStruct,
      offerParams: MarsBaseCommon.OfferParamsStruct,
      overrides?: CallOverrides
    ): Promise<[MarsBaseCommon.MBOfferStructOutput]>;
  };

  changeOfferParams(
    offer: MarsBaseCommon.MBOfferStruct,
    tokenBob: PromiseOrValue<string>[],
    amountBob: PromiseOrValue<BigNumberish>[],
    offerParameters: MarsBaseCommon.OfferParamsStruct,
    overrides?: CallOverrides
  ): Promise<MarsBaseCommon.MBOfferStructOutput>;

  "changeOfferParams((bool,bool,uint8,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address,address,address,bool[3],uint256[],uint256[],uint256[],address[],address[],address[]),address[],uint256[],(bool,bool,bool,uint256,uint256,uint256,uint256,uint256))"(
    offer: MarsBaseCommon.MBOfferStruct,
    tokenBob: PromiseOrValue<string>[],
    amountBob: PromiseOrValue<BigNumberish>[],
    offerParameters: MarsBaseCommon.OfferParamsStruct,
    overrides?: CallOverrides
  ): Promise<MarsBaseCommon.MBOfferStructOutput>;

  contractType(
    offerType: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<number>;

  "contractType(uint8)"(
    offerType: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<number>;

  getOfferType(
    amountAlice: PromiseOrValue<BigNumberish>,
    offerParameters: MarsBaseCommon.OfferParamsStruct,
    overrides?: CallOverrides
  ): Promise<number>;

  "getOfferType(uint256,(bool,bool,bool,uint256,uint256,uint256,uint256,uint256))"(
    amountAlice: PromiseOrValue<BigNumberish>,
    offerParameters: MarsBaseCommon.OfferParamsStruct,
    overrides?: CallOverrides
  ): Promise<number>;

  initOffer(
    nextOfferId: PromiseOrValue<BigNumberish>,
    tokenAlice: PromiseOrValue<string>,
    tokenBob: PromiseOrValue<string>[],
    amountAlice: PromiseOrValue<BigNumberish>,
    amountBob: PromiseOrValue<BigNumberish>[],
    offerParameters: MarsBaseCommon.OfferParamsStruct,
    overrides?: CallOverrides
  ): Promise<MarsBaseCommon.MBOfferStructOutput>;

  "initOffer(uint256,address,address[],uint256,uint256[],(bool,bool,bool,uint256,uint256,uint256,uint256,uint256))"(
    nextOfferId: PromiseOrValue<BigNumberish>,
    tokenAlice: PromiseOrValue<string>,
    tokenBob: PromiseOrValue<string>[],
    amountAlice: PromiseOrValue<BigNumberish>,
    amountBob: PromiseOrValue<BigNumberish>[],
    offerParameters: MarsBaseCommon.OfferParamsStruct,
    overrides?: CallOverrides
  ): Promise<MarsBaseCommon.MBOfferStructOutput>;

  price(
    amountAlice: PromiseOrValue<BigNumberish>,
    offerAmountAlice: PromiseOrValue<BigNumberish>,
    offerAmountBob: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "price(uint256,uint256,uint256)"(
    amountAlice: PromiseOrValue<BigNumberish>,
    offerAmountAlice: PromiseOrValue<BigNumberish>,
    offerAmountBob: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  setOfferProperties(
    offer: MarsBaseCommon.MBOfferStruct,
    offerParams: MarsBaseCommon.OfferParamsStruct,
    overrides?: CallOverrides
  ): Promise<MarsBaseCommon.MBOfferStructOutput>;

  "setOfferProperties((bool,bool,uint8,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address,address,address,bool[3],uint256[],uint256[],uint256[],address[],address[],address[]),(bool,bool,bool,uint256,uint256,uint256,uint256,uint256))"(
    offer: MarsBaseCommon.MBOfferStruct,
    offerParams: MarsBaseCommon.OfferParamsStruct,
    overrides?: CallOverrides
  ): Promise<MarsBaseCommon.MBOfferStructOutput>;

  callStatic: {
    changeOfferParams(
      offer: MarsBaseCommon.MBOfferStruct,
      tokenBob: PromiseOrValue<string>[],
      amountBob: PromiseOrValue<BigNumberish>[],
      offerParameters: MarsBaseCommon.OfferParamsStruct,
      overrides?: CallOverrides
    ): Promise<MarsBaseCommon.MBOfferStructOutput>;

    "changeOfferParams((bool,bool,uint8,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address,address,address,bool[3],uint256[],uint256[],uint256[],address[],address[],address[]),address[],uint256[],(bool,bool,bool,uint256,uint256,uint256,uint256,uint256))"(
      offer: MarsBaseCommon.MBOfferStruct,
      tokenBob: PromiseOrValue<string>[],
      amountBob: PromiseOrValue<BigNumberish>[],
      offerParameters: MarsBaseCommon.OfferParamsStruct,
      overrides?: CallOverrides
    ): Promise<MarsBaseCommon.MBOfferStructOutput>;

    contractType(
      offerType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<number>;

    "contractType(uint8)"(
      offerType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<number>;

    getOfferType(
      amountAlice: PromiseOrValue<BigNumberish>,
      offerParameters: MarsBaseCommon.OfferParamsStruct,
      overrides?: CallOverrides
    ): Promise<number>;

    "getOfferType(uint256,(bool,bool,bool,uint256,uint256,uint256,uint256,uint256))"(
      amountAlice: PromiseOrValue<BigNumberish>,
      offerParameters: MarsBaseCommon.OfferParamsStruct,
      overrides?: CallOverrides
    ): Promise<number>;

    initOffer(
      nextOfferId: PromiseOrValue<BigNumberish>,
      tokenAlice: PromiseOrValue<string>,
      tokenBob: PromiseOrValue<string>[],
      amountAlice: PromiseOrValue<BigNumberish>,
      amountBob: PromiseOrValue<BigNumberish>[],
      offerParameters: MarsBaseCommon.OfferParamsStruct,
      overrides?: CallOverrides
    ): Promise<MarsBaseCommon.MBOfferStructOutput>;

    "initOffer(uint256,address,address[],uint256,uint256[],(bool,bool,bool,uint256,uint256,uint256,uint256,uint256))"(
      nextOfferId: PromiseOrValue<BigNumberish>,
      tokenAlice: PromiseOrValue<string>,
      tokenBob: PromiseOrValue<string>[],
      amountAlice: PromiseOrValue<BigNumberish>,
      amountBob: PromiseOrValue<BigNumberish>[],
      offerParameters: MarsBaseCommon.OfferParamsStruct,
      overrides?: CallOverrides
    ): Promise<MarsBaseCommon.MBOfferStructOutput>;

    price(
      amountAlice: PromiseOrValue<BigNumberish>,
      offerAmountAlice: PromiseOrValue<BigNumberish>,
      offerAmountBob: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "price(uint256,uint256,uint256)"(
      amountAlice: PromiseOrValue<BigNumberish>,
      offerAmountAlice: PromiseOrValue<BigNumberish>,
      offerAmountBob: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setOfferProperties(
      offer: MarsBaseCommon.MBOfferStruct,
      offerParams: MarsBaseCommon.OfferParamsStruct,
      overrides?: CallOverrides
    ): Promise<MarsBaseCommon.MBOfferStructOutput>;

    "setOfferProperties((bool,bool,uint8,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address,address,address,bool[3],uint256[],uint256[],uint256[],address[],address[],address[]),(bool,bool,bool,uint256,uint256,uint256,uint256,uint256))"(
      offer: MarsBaseCommon.MBOfferStruct,
      offerParams: MarsBaseCommon.OfferParamsStruct,
      overrides?: CallOverrides
    ): Promise<MarsBaseCommon.MBOfferStructOutput>;
  };

  filters: {};

  estimateGas: {
    changeOfferParams(
      offer: MarsBaseCommon.MBOfferStruct,
      tokenBob: PromiseOrValue<string>[],
      amountBob: PromiseOrValue<BigNumberish>[],
      offerParameters: MarsBaseCommon.OfferParamsStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "changeOfferParams((bool,bool,uint8,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address,address,address,bool[3],uint256[],uint256[],uint256[],address[],address[],address[]),address[],uint256[],(bool,bool,bool,uint256,uint256,uint256,uint256,uint256))"(
      offer: MarsBaseCommon.MBOfferStruct,
      tokenBob: PromiseOrValue<string>[],
      amountBob: PromiseOrValue<BigNumberish>[],
      offerParameters: MarsBaseCommon.OfferParamsStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    contractType(
      offerType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "contractType(uint8)"(
      offerType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getOfferType(
      amountAlice: PromiseOrValue<BigNumberish>,
      offerParameters: MarsBaseCommon.OfferParamsStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getOfferType(uint256,(bool,bool,bool,uint256,uint256,uint256,uint256,uint256))"(
      amountAlice: PromiseOrValue<BigNumberish>,
      offerParameters: MarsBaseCommon.OfferParamsStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    initOffer(
      nextOfferId: PromiseOrValue<BigNumberish>,
      tokenAlice: PromiseOrValue<string>,
      tokenBob: PromiseOrValue<string>[],
      amountAlice: PromiseOrValue<BigNumberish>,
      amountBob: PromiseOrValue<BigNumberish>[],
      offerParameters: MarsBaseCommon.OfferParamsStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "initOffer(uint256,address,address[],uint256,uint256[],(bool,bool,bool,uint256,uint256,uint256,uint256,uint256))"(
      nextOfferId: PromiseOrValue<BigNumberish>,
      tokenAlice: PromiseOrValue<string>,
      tokenBob: PromiseOrValue<string>[],
      amountAlice: PromiseOrValue<BigNumberish>,
      amountBob: PromiseOrValue<BigNumberish>[],
      offerParameters: MarsBaseCommon.OfferParamsStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    price(
      amountAlice: PromiseOrValue<BigNumberish>,
      offerAmountAlice: PromiseOrValue<BigNumberish>,
      offerAmountBob: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "price(uint256,uint256,uint256)"(
      amountAlice: PromiseOrValue<BigNumberish>,
      offerAmountAlice: PromiseOrValue<BigNumberish>,
      offerAmountBob: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setOfferProperties(
      offer: MarsBaseCommon.MBOfferStruct,
      offerParams: MarsBaseCommon.OfferParamsStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "setOfferProperties((bool,bool,uint8,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address,address,address,bool[3],uint256[],uint256[],uint256[],address[],address[],address[]),(bool,bool,bool,uint256,uint256,uint256,uint256,uint256))"(
      offer: MarsBaseCommon.MBOfferStruct,
      offerParams: MarsBaseCommon.OfferParamsStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    changeOfferParams(
      offer: MarsBaseCommon.MBOfferStruct,
      tokenBob: PromiseOrValue<string>[],
      amountBob: PromiseOrValue<BigNumberish>[],
      offerParameters: MarsBaseCommon.OfferParamsStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "changeOfferParams((bool,bool,uint8,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address,address,address,bool[3],uint256[],uint256[],uint256[],address[],address[],address[]),address[],uint256[],(bool,bool,bool,uint256,uint256,uint256,uint256,uint256))"(
      offer: MarsBaseCommon.MBOfferStruct,
      tokenBob: PromiseOrValue<string>[],
      amountBob: PromiseOrValue<BigNumberish>[],
      offerParameters: MarsBaseCommon.OfferParamsStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    contractType(
      offerType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "contractType(uint8)"(
      offerType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getOfferType(
      amountAlice: PromiseOrValue<BigNumberish>,
      offerParameters: MarsBaseCommon.OfferParamsStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getOfferType(uint256,(bool,bool,bool,uint256,uint256,uint256,uint256,uint256))"(
      amountAlice: PromiseOrValue<BigNumberish>,
      offerParameters: MarsBaseCommon.OfferParamsStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    initOffer(
      nextOfferId: PromiseOrValue<BigNumberish>,
      tokenAlice: PromiseOrValue<string>,
      tokenBob: PromiseOrValue<string>[],
      amountAlice: PromiseOrValue<BigNumberish>,
      amountBob: PromiseOrValue<BigNumberish>[],
      offerParameters: MarsBaseCommon.OfferParamsStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "initOffer(uint256,address,address[],uint256,uint256[],(bool,bool,bool,uint256,uint256,uint256,uint256,uint256))"(
      nextOfferId: PromiseOrValue<BigNumberish>,
      tokenAlice: PromiseOrValue<string>,
      tokenBob: PromiseOrValue<string>[],
      amountAlice: PromiseOrValue<BigNumberish>,
      amountBob: PromiseOrValue<BigNumberish>[],
      offerParameters: MarsBaseCommon.OfferParamsStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    price(
      amountAlice: PromiseOrValue<BigNumberish>,
      offerAmountAlice: PromiseOrValue<BigNumberish>,
      offerAmountBob: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "price(uint256,uint256,uint256)"(
      amountAlice: PromiseOrValue<BigNumberish>,
      offerAmountAlice: PromiseOrValue<BigNumberish>,
      offerAmountBob: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setOfferProperties(
      offer: MarsBaseCommon.MBOfferStruct,
      offerParams: MarsBaseCommon.OfferParamsStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "setOfferProperties((bool,bool,uint8,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address,address,address,bool[3],uint256[],uint256[],uint256[],address[],address[],address[]),(bool,bool,bool,uint256,uint256,uint256,uint256,uint256))"(
      offer: MarsBaseCommon.MBOfferStruct,
      offerParams: MarsBaseCommon.OfferParamsStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
